#!/bin/bash

# Helper script to submit BRMS model jobs to SLURM
# Usage: ./scripts/submit_job.sh <r_script> [job_name] [time_limit] [memory] [cpus]

set -e

# Default values
DEFAULT_TIME="10:00:00"
DEFAULT_MEMORY="16G"
DEFAULT_CPUS="4"
DEFAULT_PARTITION="normal"
DEFAULT_ACCOUNT="evlab"

# Check if R script is provided
if [ $# -eq 0 ]; then
    echo "Error: No R script provided"
    echo "Usage: $0 <r_script> [job_name] [time_limit] [memory] [cpus]"
    echo ""
    echo "Arguments:"
    echo "  r_script:    Path to R analysis script"
    echo "  job_name:    Name for the SLURM job (default: derived from script filename)"
    echo "  time_limit:  Time limit in HH:MM:SS format (default: $DEFAULT_TIME)"
    echo "  memory:      Memory allocation (default: $DEFAULT_MEMORY)"
    echo "  cpus:        Number of CPUs (default: $DEFAULT_CPUS)"
    echo ""
    echo "Examples:"
    echo "  $0 scripts/my_analysis.R"
    echo "  $0 scripts/my_analysis.R my_analysis 48:00:00 32G 8"
    exit 1
fi

R_SCRIPT=$1
JOB_NAME=${2:-$(basename "$R_SCRIPT" .R)}
TIME_LIMIT=${3:-$DEFAULT_TIME}
MEMORY=${4:-$DEFAULT_MEMORY}
CPUS=${5:-$DEFAULT_CPUS}

# Validate R script
if [ ! -f "$R_SCRIPT" ]; then
    echo "Error: R script not found: $R_SCRIPT"
    exit 1
fi

# Create job script
JOB_SCRIPT="slurm_jobs/${JOB_NAME}_job.sh"

echo "Creating SLURM job script: $JOB_SCRIPT"

cat > "$JOB_SCRIPT" << EOF
#!/bin/bash
#SBATCH --job-name=$JOB_NAME
#SBATCH --output=outputs/logs/slurm_%j.out
#SBATCH --error=outputs/logs/slurm_%j.err
#SBATCH --time=$TIME_LIMIT
#SBATCH --partition=$DEFAULT_PARTITION
#SBATCH --account=$DEFAULT_ACCOUNT
#SBATCH --nodes=1
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=$CPUS
#SBATCH --mem=$MEMORY

# BRMS Model SLURM Job
# Generated by submit_job.sh

# Set up environment
export SINGULARITY_BIND="\$PWD:\$PWD"
export SINGULARITY_PWD="\$PWD"

# Path to your Singularity image
SINGULARITY_IMAGE="/om2/user/thclark/brms_models/brms_240807.sif"

echo "Starting BRMS analysis job"
echo "Job ID: \$SLURM_JOB_ID"
echo "Model: $JOB_NAME"
echo "R Script: $R_SCRIPT"
echo "Timestamp: \$(date)"
echo "Working directory: \$PWD"

# Create output directories if they don't exist
mkdir -p outputs/fitted_models
mkdir -p outputs/logs

# Run the analysis
echo "Running analysis with Apptainer..."
apptainer exec \\
    --bind "\$PWD:\$PWD" \\
    --pwd "\$PWD" \\
    "\$SINGULARITY_IMAGE" \\
    Rscript "$R_SCRIPT"

# Check if the job completed successfully
if [ \$? -eq 0 ]; then
    echo "Analysis completed successfully"
    echo "Timestamp: \$(date)"
else
    echo "Analysis failed with exit code \$?"
    echo "Timestamp: \$(date)"
    exit 1
fi
EOF

# Make the job script executable
chmod +x "$JOB_SCRIPT"

echo "Submitting job to SLURM..."
echo "Job name: $JOB_NAME"
echo "Time limit: $TIME_LIMIT"
echo "Memory: $MEMORY"
echo "CPUs: $CPUS"
echo "R script: $R_SCRIPT"

# Submit the job
JOB_ID=$(sbatch "$JOB_SCRIPT" | awk '{print $4}')

echo "Job submitted successfully!"
echo "Job ID: $JOB_ID"
echo "To check job status: squeue -j $JOB_ID"
echo "To cancel job: scancel $JOB_ID"
echo "Job script saved as: $JOB_SCRIPT"